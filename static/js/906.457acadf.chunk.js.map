{"version":3,"file":"static/js/906.457acadf.chunk.js","mappings":"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","sources":["components/ContactForm/ContactFormStyled.jsx","components/ContactForm/ContactForm.jsx","redux/contacts/selectors.js","components/Filter/FilterStyled.jsx","components/Filter/Filter.jsx","components/ContactItem/ConactItemStyled.jsx","components/ContactItem/ContactItem.jsx","components/ContactList/ContactListStyled.jsx","components/ContactList/ContactList.jsx","pages/Contacts.jsx"],"sourcesContent":["import styled from 'styled-components';\nimport { Field, ErrorMessage } from 'formik';\n\nexport const FormPlateStyled = styled.section`\n  border: 1px solid lightgrey;\n  padding: 8px;\n  margin-bottom: 36px;\n`;\n\nexport const Label = styled.label`\n  display: block;\n  margin-bottom: 8px;\n`;\n\nexport const Input = styled(Field)`\n  color: #2a2a2a;\n  font-size: 16px;\n`;\n\nexport const ErrorMessageStiled = styled(ErrorMessage)`\n  color: red;\n`;\n","import { Formik, Form } from 'formik';\nimport * as yup from 'yup';\n// import 'yup-phone';\nimport { useDispatch } from 'react-redux';\nimport { addContact } from 'redux/contacts/operations';\nimport {\n  FormPlateStyled,\n  Label,\n  Input,\n  ErrorMessageStiled,\n} from './ContactFormStyled';\n\nconst schema = yup.object().shape({\n  name: yup.string().required(),\n  number: yup.string().required(),\n  // number: yup.string().phone().required(),\n  // number: yup.string().phone('UA').required(),\n});\n\nconst ContactForm = function () {\n  const dispatch = useDispatch();\n  const handleSubmit = values => {\n    dispatch(addContact(values));\n  };\n\n  return (\n    <FormPlateStyled>\n      <Formik\n        initialValues={{ name: '', number: '' }}\n        validationSchema={schema}\n        onSubmit={(values, { resetForm }) => {\n          handleSubmit(values);\n          resetForm();\n        }}\n      >\n        <Form>\n          <Label>\n            Name\n            <br />\n            <Input type=\"text\" name=\"name\" />\n            <ErrorMessageStiled name=\"name\" component=\"div\" />\n          </Label>\n          <br />\n          <Label>\n            Number\n            <br />\n            <Input type=\"tel\" name=\"number\" placeholder=\"+380...\" />\n            <ErrorMessageStiled name=\"number\" component=\"div\" />\n          </Label>\n          <br />\n          <button type=\"submit\" name=\"addContact\">\n            Add contact\n          </button>\n        </Form>\n      </Formik>\n    </FormPlateStyled>\n  );\n};\n\nexport default ContactForm;\n","export const selectContacts = state => state.contacts.items;\nexport const selectIsLoading = state => state.contacts.isLoading;\nexport const selectError = state => state.contacts.error;\nexport const selectFilterText = state => state.filter.text;\n","import { Field } from 'formik';\nimport styled from 'styled-components';\n\nexport const FilterPlateStyled = styled.section`\n  border: 1px solid lightgrey;\n  padding: 8px;\n  margin-bottom: 16px;\n`;\n\nexport const Input = styled(Field)`\n  color: #2a2a2a;\n  font-size: 16px;\n`;\n","import { useSelector, useDispatch } from 'react-redux';\nimport { Formik, Form } from 'formik';\nimport { newFilter } from 'redux/filter/filterSlice';\nimport { selectFilterText } from 'redux/contacts/selectors';\nimport { FilterPlateStyled, Input } from './FilterStyled';\n\nconst Filter = function () {\n  const filter = useSelector(selectFilterText);\n  const dispatch = useDispatch();\n  const handleFilter = searchQuery => dispatch(newFilter(searchQuery));\n\n  return (\n    <FilterPlateStyled>\n      <Formik initialValues={{ filter: filter }}>\n        <Form>\n          <label>\n            Find contacts by name\n            <br />\n            <Input\n              type=\"text\"\n              name=\"filter\"\n              value={filter}\n              onChange={e => {\n                handleFilter(e.target.value);\n              }}\n            ></Input>\n          </label>\n        </Form>\n      </Formik>\n    </FilterPlateStyled>\n  );\n};\n\nexport default Filter;\n","import styled from 'styled-components';\n\nexport const ItemStyled = styled.div`\n  display: flex;\n  justify-content: space-between;\n  margin-bottom: 8px;\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 16px;\n  padding-right: 16px;\n  background-color: lightgrey;\n`;\n\nexport const ContactStyled = styled.div`\n  display: flex;\n  justify-content: space-between;\n  width: 100%;\n  padding-right: 16px;\n`;\n","import { useDispatch } from 'react-redux';\nimport { deleteContact } from 'redux/contacts/operations';\nimport { ItemStyled, ContactStyled } from './ConactItemStyled';\n\nconst ContactItem = function ({ contact }) {\n  const dispatch = useDispatch();\n  const HandleDelete = id => dispatch(deleteContact(id));\n\n  return (\n    <ItemStyled>\n      <ContactStyled>\n        <span>{contact.name}:</span> <span>{contact.number}</span>\n      </ContactStyled>\n      <button\n        type=\"button\"\n        name=\"deleteBtn\"\n        onClick={() => HandleDelete(contact.id)}\n      >\n        Delete\n      </button>\n    </ItemStyled>\n  );\n};\n\nexport default ContactItem;\n","import styled from 'styled-components';\n\nexport const ListSlyled = styled.ul`\n  list-style: none;\n  padding: 0;\n`;\n","import { useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport ContactItem from 'components/ContactItem/ContactItem';\nimport { selectContacts, selectFilterText } from 'redux/contacts/selectors';\nimport { fetchContacts } from 'redux/contacts/operations';\nimport { ListSlyled } from './ContactListStyled';\n\nconst ContactList = function () {\n  const dispatch = useDispatch();\n  const contacts = useSelector(selectContacts);\n  const filterText = useSelector(selectFilterText);\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  return (\n    <ListSlyled>\n      {contacts\n        .filter(contact =>\n          contact.name.toLowerCase().includes(filterText.toLowerCase())\n        )\n        .map((contact, id) => {\n          return <li key={id}>{<ContactItem contact={contact} />}</li>;\n        })}\n    </ListSlyled>\n  );\n};\n\nexport default ContactList;\n","import { useSelector } from 'react-redux';\nimport ContactForm from 'components/ContactForm/ContactForm';\nimport Filter from 'components/Filter/Filter';\nimport ContactList from 'components/ContactList/ContactList';\nimport { selectIsLoading, selectError } from 'redux/contacts/selectors';\n\nconst styles = {\n  main: {\n    width: '520px',\n    margin: '0 auto',\n    fontSize: '16px',\n  },\n};\n\nexport default function Contacts() {\n  const isLoading = useSelector(selectIsLoading);\n  const error = useSelector(selectError);\n\n  return (\n    <div style={styles.main}>\n      <h1>Phonebook</h1>\n      <ContactForm />\n      {isLoading && !error && <b>Request in progress...</b>}\n      <h2>Contacts</h2>\n      <Filter />\n      <ContactList />\n    </div>\n  );\n}\n"],"names":["FormPlateStyled","styled","Label","Input","Field","ErrorMessageStiled","ErrorMessage","schema","yup","shape","name","required","number","dispatch","useDispatch","initialValues","validationSchema","onSubmit","values","resetForm","addContact","handleSubmit","type","component","placeholder","selectContacts","state","contacts","items","selectIsLoading","isLoading","selectError","error","selectFilterText","filter","text","FilterPlateStyled","useSelector","value","onChange","e","searchQuery","target","newFilter","ItemStyled","ContactStyled","contact","onClick","id","deleteContact","ListSlyled","filterText","useEffect","fetchContacts","toLowerCase","includes","map","styles","main","width","margin","fontSize","Contacts","style"],"sourceRoot":""}